%readonly-tables

%{
#include <string.h>
typedef struct BifNameAndPtr BifNameAndPtr;
%}
struct BifNameAndPtr
{
  const char *name;
  BifImpl function;
};
%%
erlang:self/0, bif_erlang_self_0
erlang:length/1, bif_erlang_length_1
erlang:byte_size/1, bif_erlang_byte_size_1
erlang:is_atom/1, bif_erlang_is_atom_1
erlang:is_binary/1, bif_erlang_is_binary_1
erlang:is_integer/1, bif_erlang_is_integer_1
erlang:is_list/1, bif_erlang_is_list_1
erlang:is_number/1, bif_erlang_is_number_1
erlang:is_pid/1, bif_erlang_is_pid_1
erlang:is_reference/1, bif_erlang_is_reference_1
erlang:is_tuple/1, bif_erlang_is_tuple_1
erlang:not/1, bif_erlang_not_1
erlang:and/2, bif_erlang_and_2
erlang:or/2, bif_erlang_or_2
erlang:xor/2, bif_erlang_xor_2
erlang:==/2, bif_erlang_equal_to_2
erlang:/=/2, bif_erlang_not_equal_to_2
erlang:=:=/2, bif_erlang_exactly_equal_to_2
erlang:=/=/2, bif_erlang_exactly_not_equal_to_2
erlang:>/2, bif_erlang_greater_than_2
erlang:</2, bif_erlang_less_than_2
erlang:=</2, bif_erlang_less_than_or_equal_2
erlang:>=/2, bif_erlang_greater_than_or_equal_2
erlang:+/2, bif_erlang_add_2
erlang:-/2, bif_erlang_sub_2
erlang:*/2, bif_erlang_mul_2
erlang:div/2, bif_erlang_div_2
erlang:rem/2, bif_erlang_rem_2
erlang:-/1, bif_erlang_neg_1
erlang:abs/1, bif_erlang_abs_1
erlang:bor/2, bif_erlang_bor_2
erlang:band/2, bif_erlang_band_2
erlang:bxor/2, bif_erlang_bxor_2
erlang:bsl/2, bif_erlang_bsl_2
erlang:bsr/2, bif_erlang_bsr_2
erlang:bnot/1, bif_erlang_bnot_1
erlang:hd/1, bif_erlang_hd_1
erlang:tl/1, bif_erlang_tl_1
erlang:element/2, bif_erlang_element_2
erlang:tuple_size/1, bif_erlang_tuple_size_1
